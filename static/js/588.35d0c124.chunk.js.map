{"version":3,"file":"static/js/588.35d0c124.chunk.js","mappings":"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","sources":["api/api.js","webpack://test-training-task2/./src/components/TweetsItem/TweetsItem.module.css?bdc6","components/TweetsItem/TweetsItem.jsx","webpack://test-training-task2/./src/components/TweetsList/TweetsList.module.css?2ae8","components/TweetsList/TweetsList.jsx","pages/tweets/tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://646a7db97d3c1cae4ce29c5f.mockapi.io/users/\";\n\nexport const fetchUsers = async (page, limit = 6) => {\n  return await axios.get(BASE_URL, {\n    params: {\n      page,\n      limit,\n    },\n  });\n};\n\nexport const putFollowers = async (id, followers, isFollow) => {\n  try {\n    return await axios.put(`${BASE_URL}${id}`, {\n      followers,\n      isFollow,\n    });\n  } catch (error) {\n    console.error(\"Error:\", error.message);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"TweetsItem_profile__8yc71\",\"logoWrapper\":\"TweetsItem_logoWrapper__3XHax\",\"hero\":\"TweetsItem_hero__N4n8u\",\"divider\":\"TweetsItem_divider__a5EmA\",\"elipseBox\":\"TweetsItem_elipseBox__UI6Fd\",\"elipse\":\"TweetsItem_elipse__H14iA\",\"userImage\":\"TweetsItem_userImage__sviti\",\"bottomContainer\":\"TweetsItem_bottomContainer__ojfAj\",\"textParagraph\":\"TweetsItem_textParagraph__zoMFi\",\"followBtn\":\"TweetsItem_followBtn__a9lCC\",\"followBtnActive\":\"TweetsItem_followBtnActive__8eHM6 TweetsItem_followBtn__a9lCC\"};","import css from \"./TweetsItem.module.css\";\nimport goIt from \"images/goIt.png\";\nimport mainImg from \"images/mainImg.png\";\nimport { useState } from \"react\";\n\nimport { putFollowers } from \"api/api\";\n\nconst TweetsItem = ({ id, user, tweets, followers, avatar }) => {\n  const isUserFollowing = localStorage.getItem(id)\n    ? JSON.parse(localStorage.getItem(id)).isFollowing\n    : false;\n  const [isFollowing, setIsFollowing] = useState(isUserFollowing);\n  const [currentFollowers, setCurrentFollowers] = useState(followers);\n\n  const handleFollowClick = () => {\n    setIsFollowing(true);\n    localStorage.setItem(\n      id,\n      JSON.stringify({\n        isFollowing: true,\n      })\n    );\n    const newFollowers = currentFollowers + 1;\n    const newFollow = true;\n    setCurrentFollowers(newFollowers);\n    putFollowers(id, newFollowers, newFollow);\n  };\n\n  const handleUnfollowClick = () => {\n    setIsFollowing(false);\n    localStorage.setItem(\n      id,\n      JSON.stringify({\n        isFollowing: false,\n      })\n    );\n    const newFollowers = currentFollowers - 1;\n    setCurrentFollowers(newFollowers);\n    const newFollow = false;\n    putFollowers(id, newFollowers, newFollow);\n  };\n\n  const formattedFollowers = currentFollowers.toLocaleString(\"en-US\");\n\n  return (\n    <li className={css.profile}>\n      <img src={goIt} alt=\"goIt logo\" className={css.logoWrapper} />\n      <img src={mainImg} alt=\"main img\" className={css.hero} />\n\n      <div className={css.divider}></div>\n\n      <div className={css.elipseBox}>\n        <div className={css.elipse}>\n          <img className={css.userImage} src={avatar} alt={user} />\n        </div>\n      </div>\n\n      <div className={css.bottomContainer}>\n        <p className={css.textParagraph}>{tweets} tweets</p>\n        <p className={css.textParagraph}>{formattedFollowers} followers</p>\n\n        {isFollowing || isUserFollowing ? (\n          <button\n            type=\"button\"\n            className={css.followBtnActive}\n            onClick={handleUnfollowClick}\n          >\n            Following\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={css.followBtn}\n            onClick={handleFollowClick}\n          >\n            Follow\n          </button>\n        )}\n      </div>\n    </li>\n  );\n};\n\nexport default TweetsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"tweetsList\":\"TweetsList_tweetsList__CBQUG\",\"loadMoreBtn\":\"TweetsList_loadMoreBtn__W8+Du\",\"btnContainer\":\"TweetsList_btnContainer__QybQo\",\"goHomeBtn\":\"TweetsList_goHomeBtn__hoA1e\",\"filter\":\"TweetsList_filter__oL0I7\",\"selectContainer\":\"TweetsList_selectContainer__eFKhC\"};","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { MdKeyboardBackspace } from \"react-icons/md\";\nimport { fetchUsers } from \"api/api\";\nimport TweetsItem from \"components/TweetsItem/TweetsItem\";\nimport css from \"./TweetsList.module.css\";\n\nconst TweetsList = () => {\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loadMore, setLoadMore] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"All\");\n  // const [isFollowed, setIsFollowed] = useState(false);\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchUsers(page);\n      setData((prevData) => [...prevData, ...response.data]);\n      if (response.data.length > 5) {\n        setLoadMore(true);\n      } else {\n        setLoadMore(false);\n      }\n    };\n\n    fetchData();\n  }, [page]);\n\n  const onLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  const handleGoBack = () => navigate(\"/\");\n\n  const onSelect = (e) => {\n    if (e.target.value === \"true\") {\n      setSelectedValue(true);\n    }\n    if (e.target.value === \"false\") {\n      setSelectedValue(false);\n    }\n    if (e.target.value === \"All\") {\n      setSelectedValue(\"All\");\n    }\n  };\n\n  return (\n    <>\n      <div className={css.selectContainer}>\n        <button type=\"button\" className={css.goHomeBtn} onClick={handleGoBack}>\n          <MdKeyboardBackspace width={100} height={100} /> GoHome\n        </button>\n        <select\n          value={selectedValue}\n          onChange={onSelect}\n          className={css.filter}\n        >\n          <option value=\"All\">All</option>\n          <option value={true}>Following</option>\n          <option value={false}>Follow</option>\n        </select>\n      </div>\n      {data.length !== 0 && (\n        <ul className={css.tweetsList}>\n          {selectedValue === \"All\" &&\n            data.map(({ id, user, tweets, followers, avatar }) => (\n              <TweetsItem\n                key={id}\n                id={id}\n                user={user}\n                tweets={tweets}\n                followers={followers}\n                avatar={avatar}\n              />\n            ))}\n          {selectedValue !== \"All\" &&\n            data\n              .filter(({ isFollow }) => isFollow === selectedValue)\n              .map(({ id, user, tweets, followers, avatar }) => (\n                <TweetsItem\n                  key={id}\n                  id={id}\n                  user={user}\n                  tweets={tweets}\n                  followers={followers}\n                  avatar={avatar}\n                />\n              ))}\n        </ul>\n      )}\n      {loadMore && (\n        <div className={css.btnContainer}>\n          <button\n            className={css.loadMoreBtn}\n            type=\"button\"\n            onClick={onLoadMore}\n          >\n            Load More\n          </button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default TweetsList;\n","import TweetsList from \"components/TweetsList/TweetsList\";\nconst Tweets = () => {\n  return <TweetsList />;\n};\n\nexport default Tweets;\n"],"names":["BASE_URL","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","limit","_args","arguments","wrap","_context","prev","next","length","undefined","axios","get","params","abrupt","sent","stop","_x","apply","putFollowers","_ref2","_callee2","id","followers","isFollow","_context2","put","concat","t0","console","error","message","_x2","_x3","_x4","user","tweets","avatar","isUserFollowing","localStorage","getItem","JSON","parse","isFollowing","_useState","useState","_useState2","_slicedToArray","setIsFollowing","_useState3","_useState4","currentFollowers","setCurrentFollowers","formattedFollowers","toLocaleString","_jsxs","className","css","children","_jsx","src","alt","mainImg","type","onClick","setItem","stringify","newFollowers","data","setData","setPage","_useState5","_useState6","loadMore","setLoadMore","_useState7","_useState8","selectedValue","setSelectedValue","navigate","useNavigate","useEffect","fetchData","response","prevData","_toConsumableArray","_Fragment","MdKeyboardBackspace","width","height","value","onChange","e","target","map","TweetsItem","filter","_ref3","_ref4","TweetsList"],"sourceRoot":""}